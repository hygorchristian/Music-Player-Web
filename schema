{
  "typeDefs": "type Album {\n  id: ID!\n  cover_image: String!\n  artist_id: ID!\n  album_duration: Int!\n  name: String!\n  year: Int!\n  Artist: Artist\n  Music: [Music]\n}\n\ninput AlbumFilter {\n  q: String\n  ids: [ID]\n  id: ID\n  cover_image: String\n  artist_id: ID\n  album_duration: Int\n  name: String\n  year: Int\n  id_neq: ID\n  cover_image_neq: String\n  artist_id_neq: ID\n  album_duration_lt: Int\n  album_duration_lte: Int\n  album_duration_gt: Int\n  album_duration_gte: Int\n  album_duration_neq: Int\n  name_neq: String\n  year_lt: Int\n  year_lte: Int\n  year_gt: Int\n  year_gte: Int\n  year_neq: Int\n}\n\ninput AlbumInput {\n  cover_image: String!\n  artist_id: ID!\n  album_duration: Int!\n  name: String!\n  year: Int!\n}\n\ntype Artist {\n  id: ID!\n  private: Int!\n  name: String!\n  artist_image: String!\n  Albums: [Album]\n  Music: [Music]\n}\n\ninput ArtistFilter {\n  q: String\n  ids: [ID]\n  id: ID\n  private: Int\n  name: String\n  artist_image: String\n  id_neq: ID\n  private_lt: Int\n  private_lte: Int\n  private_gt: Int\n  private_gte: Int\n  private_neq: Int\n  name_neq: String\n  artist_image_neq: String\n}\n\ninput ArtistInput {\n  private: Int!\n  name: String!\n  artist_image: String!\n}\n\ntype ListMetadata {\n  count: Int\n}\n\ntype Music {\n  id: ID!\n  name: String!\n  duration: Int!\n  album_id: ID!\n  artist_id: ID!\n  Album: Album\n  Artist: Artist\n}\n\ninput MusicFilter {\n  q: String\n  ids: [ID]\n  id: ID\n  name: String\n  duration: Int\n  album_id: ID\n  artist_id: ID\n  id_neq: ID\n  name_neq: String\n  duration_lt: Int\n  duration_lte: Int\n  duration_gt: Int\n  duration_gte: Int\n  duration_neq: Int\n  album_id_neq: ID\n  artist_id_neq: ID\n}\n\ninput MusicInput {\n  name: String!\n  duration: Int!\n  album_id: ID!\n  artist_id: ID!\n}\n\ntype Mutation {\n  createArtist(private: Int!, name: String!, artist_image: String!): Artist\n  createManyArtist(data: [ArtistInput]): [Artist]\n  updateArtist(id: ID!, private: Int, name: String, artist_image: String): Artist\n  removeArtist(id: ID!): Artist\n  createAlbum(cover_image: String!, artist_id: ID!, album_duration: Int!, name: String!, year: Int!): Album\n  createManyAlbum(data: [AlbumInput]): [Album]\n  updateAlbum(id: ID!, cover_image: String, artist_id: ID, album_duration: Int, name: String, year: Int): Album\n  removeAlbum(id: ID!): Album\n  createMusic(name: String!, duration: Int!, album_id: ID!, artist_id: ID!): Music\n  createManyMusic(data: [MusicInput]): [Music]\n  updateMusic(id: ID!, name: String, duration: Int, album_id: ID, artist_id: ID): Music\n  removeMusic(id: ID!): Music\n}\n\ntype Query {\n  Artist(id: ID!): Artist\n  allArtists(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: ArtistFilter): [Artist]\n  _allArtistsMeta(page: Int, perPage: Int, filter: ArtistFilter): ListMetadata\n  Album(id: ID!): Album\n  allAlbums(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: AlbumFilter): [Album]\n  _allAlbumsMeta(page: Int, perPage: Int, filter: AlbumFilter): ListMetadata\n  Music(id: ID!): Music\n  allMusic(page: Int, perPage: Int, sortField: String, sortOrder: String, filter: MusicFilter): [Music]\n  _allMusicMeta(page: Int, perPage: Int, filter: MusicFilter): ListMetadata\n}\n",
  "resolvers": {
    "Query": {},
    "Mutation": {},
    "Artist": {},
    "Album": {},
    "Music": {}
  }
}
